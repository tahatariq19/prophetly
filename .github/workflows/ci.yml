name: CI/CD Pipeline

on:
  workflow_dispatch:

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: pip install -r requirements-dev.txt
      - name: Run tests
        run: pytest tests/ -v --cov=src --cov-report=xml
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/coverage.xml

  frontend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test
      - name: Run E2E tests
        run: |
          npx playwright install
          npm run test:e2e
      - name: Upload Playwright report
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 7

  privacy-compliance:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Privacy compliance check
        run: |
          echo "Checking privacy compliance..."
          # Check for database connection strings or direct SQL usage
          if grep -r -E 'dbname=|user=|password=|host=' backend/src/ || grep -r -i 'psycopg2' backend/src/; then
            echo "Error: Database configuration found."
            exit 1
          fi
          # Check for persistent storage configuration
          if grep -r -E 'boto3|google-cloud-storage|azure-storage' backend/src/; then
            echo "Error: Persistent storage client found."
            exit 1
          fi
          echo "âœ“ Privacy compliance verified"

  build:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, privacy-compliance]
    steps:
      - uses: actions/checkout@v3
      - name: Build Docker images
        run: docker-compose -f docker-compose.prod.yml build
      - name: Test production build
        run: |
          docker-compose -f docker-compose.prod.yml up -d
          echo "Waiting for services to be healthy..."
          timeout 30s bash -c 'until curl -f http://localhost:8000/health; do sleep 5; done'
          docker-compose -f docker-compose.prod.yml down