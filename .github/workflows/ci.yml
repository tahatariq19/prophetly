name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        cd backend
        pip install -r requirements-dev.txt
    
    - name: Run tests
      run: |
        cd backend
        pytest tests/ -v --cov=src --cov-report=xml
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run tests
      run: |
        cd frontend
        npm test
    
    - name: Run E2E tests
      run: |
        cd frontend
        npx playwright install
        npm run test:e2e

  privacy-compliance:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Privacy compliance check
      run: |
        echo "Checking privacy compliance..."
        # Check for no database configurations
        ! grep -r "database\|db\|sql" backend/src/ || exit 1
        # Check for no persistent storage
        ! grep -r "storage\|persist\|save\|store" backend/src/ || exit 1
        echo "âœ“ Privacy compliance verified"

  build:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, privacy-compliance]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Docker images
      run: |
        docker-compose -f docker-compose.prod.yml build
    
    - name: Test production build
      run: |
        docker-compose -f docker-compose.prod.yml up -d
        sleep 30
        curl -f http://localhost:8000/health
        docker-compose -f docker-compose.prod.yml down